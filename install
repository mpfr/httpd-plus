#!/bin/ksh
#
# Copyright (c) 2020 Matthias Pressfreund
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

srcroot='/usr/src'
srcdir=${srcroot}/usr.sbin/httpd
chksum='372e93ac42ee8a8ffd11761e8906923e9539886348dbc9572ed9797aa9582ca9'

restore()
{
	echo -n 'Restoring original sources ... '
	cd ${srcdir}/..
	rm -rf ${srcdir} && mv $1 ${srcdir}
	[[ $? -eq 0 ]] && echo 'Done.' || echo 'Failed.'
}

if [[ $(id -u) != 0 ]]; then
	echo 'Need root privileges.'
	exit 1
fi
if [[ ! -d ${srcdir} ]]; then
	echo 'Missing source tree.'
	exit 1
fi

chksum0=$(find ${srcdir} \( -name '*.[chy578]' -o -name 'Makefile' \) \
	-type f -maxdepth 1 -exec sha256 {} \; | sort -k 2 | sha256)
if [[ ${chksum0} != ${chksum} ]]; then
	echo 'Sources and patches do not match. Make sure ...'
	echo '  ... the -current branch is in use.'
	echo '  ... both are up-to-date.'
	while :
	do
		echo -n 'Continue anyway (Not recommended!)? [y/N] '
		read yn
		case ${yn} in
			y)	break;;
			*)	echo 'Exiting.'; exit 1;;
		esac
	done
fi

echo -n 'Backing up original sources ... '
while :
do
	bakdir=${srcdir}~$RANDOM
	[[ -d ${bakdir} ]] || break
done
cp -a ${srcdir} ${bakdir}
if [[ $? -eq 0 ]]; then
	echo 'Done.'
else
	echo 'Failed.'
	exit 1
fi

echo 'Applying patch files ...'
for f in $(find $(pwd)/$(dirname $0) -type f -name '*.patch' | sort); do
	echo "... $(basename ${f} .patch) ..."
	patch -d ${srcroot} -f -i ${f} -p0 --posix
	if [[ $? -ne 0 ]]; then
		restore ${bakdir}
		exit 1
	fi
done

cd ${srcdir}

echo 'Building and installing httpd-plus binary and manpage ...'
make obj && make && make install
ret=$?

restore ${bakdir}

if [[ ${ret} -ne 0 ]]; then
	echo "\nInstalling httpd-plus failed (exitcode: ${ret})."
	exit 1
fi
echo '\nInstalling httpd-plus binary and manpage completed successfully.'
echo "Please consult 'man httpd.conf' for further information on new features."
